{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\login.tsx\");\n}\n// REMIX HMR END\n\nimport React, { useState } from \"react\";\nimport { Paper, TextInput, PasswordInput, Button, Title, Text } from \"@mantine/core\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport classes from \"~/style/AuthenticationImage.module.css\";\nimport pb from \"../lib/pocketbase\";\nexport function links() {\n  return [{\n    rel: \"stylesheet\",\n    href: classes\n  }];\n}\nconst AuthenticationImage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isTouched, setIsTouched] = useState({\n    email: false,\n    password: false\n  });\n  const navigate = useNavigate();\n  const isValidEmail = email => {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n  const handleLogin = async () => {\n    setIsTouched({\n      email: true,\n      password: true\n    });\n    if (!email || !password) {\n      setError(\"Pros\u00EDm vypl\u0148te v\u0161echna pole\");\n      return;\n    }\n    if (!isValidEmail(email)) {\n      setError(\"Pros\u00EDm zadejte platn\u00FD email\");\n      return;\n    }\n    try {\n      const authData = await pb.collection('users').authWithPassword(email, password);\n      console.log(\"Authentication Successful\", authData);\n      console.log(authData.token);\n      //localStorage.setItem(\"token\", authData.token);\n      navigate(\"/app/home\");\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(\"Nepoda\u0159ilo se p\u0159ihl\u00E1sit, zkuste to pros\u00EDm znovu\");\n      } else {\n        setError(\"Nastala chyba, zkuste to pros\u00EDm znovu pozd\u011Bji\");\n      }\n    }\n  };\n  const emailClasses = `${classes.input} ${isTouched.email && (!email || !isValidEmail(email)) ? classes.error : ''}`;\n  const passwordClasses = `${classes.input} ${isTouched.password && !password ? classes.error2 : ''}`;\n  return <div className={classes.wrapper}>\r\n      <Paper className={classes.form} radius={0} p={30}>\r\n        <Title order={2} className={classes.title} ta=\"center\" mt=\"md\" mb={50}>\r\n          V\u00EDtejte zp\u011Bt\r\n        </Title>\r\n\r\n        <TextInput label=\"Email:\" placeholder=\"V\u00E1\u0161 email\" size=\"md\" value={email} onChange={e => setEmail(e.currentTarget.value)} className={emailClasses} />\n        \r\n        <PasswordInput label=\"Heslo:\" placeholder=\"Va\u0161e heslo\" mt=\"md\" size=\"md\" value={password} onChange={e => setPassword(e.currentTarget.value)} className={passwordClasses} />\n        \r\n        <Button fullWidth mt=\"xl\" size=\"md\" onClick={handleLogin}>\r\n          P\u0159ihl\u00E1sit se\r\n        </Button>\r\n\r\n        {error && <Text color=\"red\" mt=\"md\">{error}</Text>}\r\n\r\n        <Text ta=\"center\" mt=\"md\">\r\n          Nem\u00E1te \u00FA\u010Det? <Link to=\"/register\">Registrovat se</Link>\r\n        </Text>\r\n      </Paper>\r\n    </div>;\n};\n_s(AuthenticationImage, \"14T9mvYiCX40EU8HACBEhLs7804=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthenticationImage;\nexport default AuthenticationImage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationImage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["email"]
}
